interface ErrorCreationArguments {
    kind?: string;
    message?: string;
    originalError: Error;
    tryToParseError?: boolean;
}
interface ErrorReportArguments {
    kind: string;
    message: string;
    originalError: Error;
    tryToParseError?: boolean;
}
export declare class ErrorReport extends Error {
    static create(args: ErrorCreationArguments): ErrorReport;
    private static readonly MAX_ERROR_STRING_LENGTH;
    private static readonly DEFAULT_MAX_OBJECT_DEPTH;
    private static createGenericErrorKind;
    private static getRequestErrorMetadata;
    readonly kind: string;
    readonly originalError: any;
    readonly errorDetails: any;
    readonly errorId: string;
    constructor({ kind, message, originalError, tryToParseError }: ErrorReportArguments);
    toObject(objectDepth?: number): any;
}
export {};
